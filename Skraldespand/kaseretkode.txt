
// Tegn tårnet
// Tegn tårnens krop
//    ctx.fillStyle = '#8B4513'; // Brun farve
//    ctx.fillRect(100, 150, 50, 150); // Rektangulær krop
//
//    // Tegn tårnets top
//    ctx.fillStyle = '#CD853F'; // Lysere brun farve
//    ctx.fillRect(75, 100, 100, 50); // Rektangulær top
//
//    // Tegn vindue
//    ctx.fillStyle = '#ADD8E6'; // Blå farve
//    ctx.fillRect(90, 160, 20, 20); // Vindue
//	ctx.fillStyle = '#ccddff';
//	ctx.beginPath();
//	ctx.moveTo(60,60);
//	ctx.lineTo(100,50);
//	ctx.lineTo(150,80);
//	ctx.closePath();
//	ctx.fill();
//	ctx.strokeStyle = 'rgb(0,128,0)';
//	ctx.lineWidth = 1;
//	ctx.stroke();

// fanger lige canvas
const canvas = document.getElementById('gameCanvas');
const ctx = canvas.getContext('2d');

var particles = [];
var tick = 0;
var towers = [];

function createParticles() {
    // check on every 10th tick
    if (tick % 10 === 0) {
        // add particle if fewer end 100
        if (particles.length < 100) {
            particles.push({
                x: 0, // between 0 and canvas width
                y: Math.random() * canvas.height,
                speed: 2 + Math.random() * 3, // between 2 and 5
                radius: 5 + Math.random() * 5, // between 5 and 10
                color: "white"
            });
        }
    }
}

function updateParticles() {
    for (var i = 0; i < particles.length; i++) {
        var part = particles[i];
        part.x += part.speed;
    }
}

function killParticles() {
    for (var i = 0; i < particles.length; i++) {
        var part = particles[i];
        if (part.x > canvas.width) {
            part.x = 0;
        }
    }
}

function drawParticles() {
    for (var i = 0; i < particles.length; i++) {
        var part = particles[i];
        ctx.beginPath();
        ctx.arc(part.x, part.y, part.radius, 0, Math.PI * 2);
        ctx.closePath();
        ctx.fillStyle = part.color;
        ctx.fill();
    }
}

// Funktion til at tegne et tårn
function drawTower(x, y) {
    // Tegn spil elementerne
    ctx.fillStyle = '#ccddff';
    ctx.beginPath();
    ctx.moveTo(x, y);
    ctx.lineTo(x, y - 50);
    ctx.lineTo(x - 50, y - 50);
    ctx.lineTo(x - 50, y);
    ctx.closePath();
    ctx.fill();

    ctx.strokeStyle = 'rgb(0, 128, 0)';
    ctx.lineWidth = 1;
    ctx.stroke();
}

// Event listener til at tilføje et tårn ved klik
canvas.addEventListener('click', function(event) {
    var rect = canvas.getBoundingClientRect();
    var mouseX = event.clientX - rect.left;
    var mouseY = event.clientY - rect.top;

    // Udskriv musens koordinater for at kontrollere
    console.log('Mouse X:', mouseX, 'Mouse Y:', mouseY);

    // Juster positionen så tårnet centreres omkring klikpositionen
    var towerX = mouseX + 25; // +25 for at justere for tårnets bredde
    var towerY = mouseY + 50; // +50 for at justere for tårnets højde

    // Udskriv tårnets position for at kontrollere
    console.log('Tower X:', towerX, 'Tower Y:', towerY);

    // Tilføj tårn til arrayet
    towers.push({ x: towerX, y: towerY });

    // Tegn alle tårne igen
    ctx.clearRect(0, 0, canvas.width, canvas.height); // Rens canvasen
    for (var i = 0; i < towers.length; i++) {
        drawTower(towers[i].x, towers[i].y);
    }
});


function gameLoop() {
    tick++;
    // clear canvas
    ctx.fillStyle = "black";
    ctx.fillRect(0, 0, canvas.width, canvas.height);

//    // Partikelsystem
//    createParticles();
//    updateParticles();
//    killParticles();
//    drawParticles();


    // få fat i næste frame
    requestAnimationFrame(gameLoop);
}

// Start game loop
canvas.addEventListener('click', function(event) {
    var rect = canvas.getBoundingClientRect();
    var mouseX = event.clientX - rect.left;
    var mouseY = event.clientY - rect.top;

    // Udskriv musens koordinater for at kontrollere
    console.log('Mouse X:', mouseX, 'Mouse Y:', mouseY);

    // Juster positionen så tårnet centreres omkring klikpositionen
    var towerX = mouseX + 25; // +25 for at justere for tårnets bredde
    var towerY = mouseY + 50; // +50 for at justere for tårnets højde

    // Udskriv tårnets position for at kontrollere
    console.log('Tower X:', towerX, 'Tower Y:', towerY);

    // Tilføj tårn til arrayet
    towers.push({ x: towerX, y: towerY });

    // Tegn alle tårne igen
    ctx.clearRect(0, 0, canvas.width, canvas.height); // Rens canvasen
    for (var i = 0; i < towers.length; i++) {
        drawTower(towers[i].x, towers[i].y);
    }
});
canvas.addEventListener('click', function(event) {
    var rect = canvas.getBoundingClientRect();
    var mouseX = event.clientX - rect.left;
    var mouseY = event.clientY - rect.top;

    // Udskriv musens koordinater for at kontrollere
    console.log('Mouse X:', mouseX, 'Mouse Y:', mouseY);

    // Juster positionen så tårnet centreres omkring klikpositionen
    var towerX = mouseX + 25; // +25 for at justere for tårnets bredde
    var towerY = mouseY + 50; // +50 for at justere for tårnets højde

    // Udskriv tårnets position for at kontrollere
    console.log('Tower X:', towerX, 'Tower Y:', towerY);

    // Tilføj tårn til arrayet
    towers.push({ x: towerX, y: towerY });

    // Tegn alle tårne igen
    ctx.clearRect(0, 0, canvas.width, canvas.height); // Rens canvasen
    for (var i = 0; i < towers.length; i++) {
        drawTower(towers[i].x, towers[i].y);
    }
});
canvas.addEventListener('click', function(event) {
    var rect = canvas.getBoundingClientRect();
    var mouseX = event.clientX - rect.left;
    var mouseY = event.clientY - rect.top;

    // Udskriv musens koordinater for at kontrollere
    console.log('Mouse X:', mouseX, 'Mouse Y:', mouseY);

    // Juster positionen så tårnet centreres omkring klikpositionen
    var towerX = mouseX + 25; // +25 for at justere for tårnets bredde
    var towerY = mouseY + 50; // +50 for at justere for tårnets højde

    // Udskriv tårnets position for at kontrollere
    console.log('Tower X:', towerX, 'Tower Y:', towerY);

    // Tilføj tårn til arrayet
    towers.push({ x: towerX, y: towerY });

    // Tegn alle tårne igen
    ctx.clearRect(0, 0, canvas.width, canvas.height); // Rens canvasen
    for (var i = 0; i < towers.length; i++) {
        drawTower(towers[i].x, towers[i].y);
    }
});
canvas.addEventListener('click', function(event) {
    var rect = canvas.getBoundingClientRect();
    var mouseX = event.clientX - rect.left;
    var mouseY = event.clientY - rect.top;

    // Udskriv musens koordinater for at kontrollere
    console.log('Mouse X:', mouseX, 'Mouse Y:', mouseY);

    // Juster positionen så tårnet centreres omkring klikpositionen
    var towerX = mouseX + 25; // +25 for at justere for tårnets bredde
    var towerY = mouseY + 50; // +50 for at justere for tårnets højde

    // Udskriv tårnets position for at kontrollere
    console.log('Tower X:', towerX, 'Tower Y:', towerY);

    // Tilføj tårn til arrayet
    towers.push({ x: towerX, y: towerY });

    // Tegn alle tårne igen
    ctx.clearRect(0, 0, canvas.width, canvas.height); // Rens canvasen
    for (var i = 0; i < towers.length; i++) {
        drawTower(towers[i].x, towers[i].y);
    }
});

gameLoop();



		<!--
<input type="text" id="inputField" placeholder="skriv noget">
		-->


function createNewTower(x, y) {
	if (towersCreatedThisRound < 2) {
		towersCreatedThisRound++;
		return {
			x: x,
			y: y,
			width: 20,
			height: 20,
			range: 200,
			shootInterval: 1000,
			lastShootTime: 0
		};
	}
	else {
		console.log("ikke flere")
	}
}



// function removeOffScreenSquares() {
//	firkanter = firkanter.filter(square => square.x <= canvas.width + square.width && !square.hit);
//}



function logHitSquares(firkanter) {
    // Filter squares that have been hit
    const hitSquares = firkanter.filter(square => square.hit);
    // Log the hit squares
    // console.log(hitSquares);
if square = hit {
	console.log("hit")
	}
}
